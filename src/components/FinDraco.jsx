/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 finDraco.gltf --transform 
Files: finDraco.gltf [235.5KB] > finDraco-transformed.glb [94.06KB] (60%)
*/

import React, { useRef, useEffect, useMemo, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export function Model(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('/finDraco-transformed.glb');
  const { actions } = useAnimations(animations, group);
  // console.log(Object.keys(actions));
  

  const changeGroupPosition = () => {
    
    if (group) {
      group.current.position.set(-1.8, 0, 0);
    }
  };

  // Set the loop mode and play each animation infinitely
  useEffect(() => {
    // console.log(group);
    
    Object.keys(actions).forEach((animationName) => {
      actions[animationName].play();
    })

  }, [])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Empty" position={[0.091, 11.2, -0.044]} scale={1.678}>
          <mesh name="Plane" geometry={nodes.Plane.geometry} material={materials['Material.006']} position={[-0.04, -0.119, 0.022]} rotation={[1.571, -0.002, 0.061]} scale={0.596} />
        </group>
        <group name="Empty001" position={[3.612, 9.604, -0.106]} rotation={[0, -0.042, 0]} scale={-1.357}>
          <mesh name="Plane001" geometry={nodes.Plane001.geometry} material={materials['Material.007']} position={[0.036, 0.077, -0.073]} rotation={[Math.PI / 2, 0, 0]} scale={-0.737} />
        </group>
        <group name="Empty002" position={[7.124, 12.395, 0.009]} rotation={[0, -0.042, 0]} scale={1.462}>
          <mesh name="Plane002" geometry={nodes.Plane002.geometry} material={materials['Material.008']} position={[-0.014, -0.134, -0.01]} rotation={[Math.PI / 2, 0, 0]} scale={0.684} />
        </group>
        <group name="Empty003" position={[10.66, 8.018, -0.155]} rotation={[0, -0.042, 0]} scale={1.328}>
          <mesh name="Plane003" geometry={nodes.Plane003.geometry} material={materials['Material.009']} position={[-0.012, -0.014, 0.112]} rotation={[Math.PI / 2, 0, 0]} scale={0.753} />
        </group>
        <group name="Empty004" position={[14.123, 12.351, -0.005]} scale={1.417}>
          <mesh name="Plane004" geometry={nodes.Plane004.geometry} material={materials['Material.010']} position={[0.043, -0.107, -0.001]} rotation={[Math.PI / 2, 0, 0]} scale={0.706} />
        </group>
        <mesh name="Text" geometry={nodes.Text.geometry} material={materials.PaletteMaterial001} />
        <mesh name="NurbsPath" geometry={nodes.NurbsPath.geometry} material={materials.PaletteMaterial002} position={[-3, 7, 0]} rotation={[0, 0, -Math.PI / 2]} scale={[3.5, 5, 1]} />
        <mesh name="Cone" geometry={nodes.Cone.geometry} material={materials.PaletteMaterial003} position={[-3, 14, 0]} rotation={[Math.PI / 2, 0, 0]} scale={[1, 5, 1]} />
        <mesh name="Cube001" geometry={nodes.Cube001.geometry} material={materials.PaletteMaterial004} rotation={[-Math.PI, 0, 0]} scale={[-0.995, -4.667, -1]} />
        <mesh name="Cube003" geometry={nodes.Cube003.geometry} material={materials.PaletteMaterial005} position={[7.08, 0, 0]} rotation={[-Math.PI, 0, 0]} scale={[-0.995, -5.333, -1]} />
      </group>
    </group>
  )
}

useGLTF.preload('/finDraco-transformed.glb')
